/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/2022_facebook": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.2022_facebook.id"];
          upi?: parameters["rowFilter.2022_facebook.upi"];
          netid?: parameters["rowFilter.2022_facebook.netid"];
          email?: parameters["rowFilter.2022_facebook.email"];
          mailbox?: parameters["rowFilter.2022_facebook.mailbox"];
          first_name?: parameters["rowFilter.2022_facebook.first_name"];
          last_name?: parameters["rowFilter.2022_facebook.last_name"];
          school_code?: parameters["rowFilter.2022_facebook.school_code"];
          school?: parameters["rowFilter.2022_facebook.school"];
          curriculum?: parameters["rowFilter.2022_facebook.curriculum"];
          organization_code?: parameters["rowFilter.2022_facebook.organization_code"];
          organization?: parameters["rowFilter.2022_facebook.organization"];
          title?: parameters["rowFilter.2022_facebook.title"];
          address?: parameters["rowFilter.2022_facebook.address"];
          unit_class?: parameters["rowFilter.2022_facebook.unit_class"];
          unit_code?: parameters["rowFilter.2022_facebook.unit_code"];
          unit?: parameters["rowFilter.2022_facebook.unit"];
          postal_address?: parameters["rowFilter.2022_facebook.postal_address"];
          office_building?: parameters["rowFilter.2022_facebook.office_building"];
          cv?: parameters["rowFilter.2022_facebook.cv"];
          profile?: parameters["rowFilter.2022_facebook.profile"];
          city?: parameters["rowFilter.2022_facebook.city"];
          year?: parameters["rowFilter.2022_facebook.year"];
          college?: parameters["rowFilter.2022_facebook.college"];
          college_code?: parameters["rowFilter.2022_facebook.college_code"];
          leave?: parameters["rowFilter.2022_facebook.leave"];
          eli_whitney?: parameters["rowFilter.2022_facebook.eli_whitney"];
          image?: parameters["rowFilter.2022_facebook.image"];
          birthday?: parameters["rowFilter.2022_facebook.birthday"];
          major?: parameters["rowFilter.2022_facebook.major"];
          phone?: parameters["rowFilter.2022_facebook.phone"];
          access_code?: parameters["rowFilter.2022_facebook.access_code"];
          middle_name?: parameters["rowFilter.2022_facebook.middle_name"];
          office_room?: parameters["rowFilter.2022_facebook.office_room"];
          website?: parameters["rowFilter.2022_facebook.website"];
          education?: parameters["rowFilter.2022_facebook.education"];
          name_recording?: parameters["rowFilter.2022_facebook.name_recording"];
          pronouns?: parameters["rowFilter.2022_facebook.pronouns"];
          phonetic_name?: parameters["rowFilter.2022_facebook.phonetic_name"];
          suffix?: parameters["rowFilter.2022_facebook.suffix"];
          fax?: parameters["rowFilter.2022_facebook.fax"];
          city_as_point?: parameters["rowFilter.2022_facebook.city_as_point"];
          birth_day?: parameters["rowFilter.2022_facebook.birth_day"];
          birth_month?: parameters["rowFilter.2022_facebook.birth_month"];
          visitor?: parameters["rowFilter.2022_facebook.visitor"];
          preferred_name?: parameters["rowFilter.2022_facebook.preferred_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["2022_facebook"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** 2022_facebook */
          "2022_facebook"?: definitions["2022_facebook"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.2022_facebook.id"];
          upi?: parameters["rowFilter.2022_facebook.upi"];
          netid?: parameters["rowFilter.2022_facebook.netid"];
          email?: parameters["rowFilter.2022_facebook.email"];
          mailbox?: parameters["rowFilter.2022_facebook.mailbox"];
          first_name?: parameters["rowFilter.2022_facebook.first_name"];
          last_name?: parameters["rowFilter.2022_facebook.last_name"];
          school_code?: parameters["rowFilter.2022_facebook.school_code"];
          school?: parameters["rowFilter.2022_facebook.school"];
          curriculum?: parameters["rowFilter.2022_facebook.curriculum"];
          organization_code?: parameters["rowFilter.2022_facebook.organization_code"];
          organization?: parameters["rowFilter.2022_facebook.organization"];
          title?: parameters["rowFilter.2022_facebook.title"];
          address?: parameters["rowFilter.2022_facebook.address"];
          unit_class?: parameters["rowFilter.2022_facebook.unit_class"];
          unit_code?: parameters["rowFilter.2022_facebook.unit_code"];
          unit?: parameters["rowFilter.2022_facebook.unit"];
          postal_address?: parameters["rowFilter.2022_facebook.postal_address"];
          office_building?: parameters["rowFilter.2022_facebook.office_building"];
          cv?: parameters["rowFilter.2022_facebook.cv"];
          profile?: parameters["rowFilter.2022_facebook.profile"];
          city?: parameters["rowFilter.2022_facebook.city"];
          year?: parameters["rowFilter.2022_facebook.year"];
          college?: parameters["rowFilter.2022_facebook.college"];
          college_code?: parameters["rowFilter.2022_facebook.college_code"];
          leave?: parameters["rowFilter.2022_facebook.leave"];
          eli_whitney?: parameters["rowFilter.2022_facebook.eli_whitney"];
          image?: parameters["rowFilter.2022_facebook.image"];
          birthday?: parameters["rowFilter.2022_facebook.birthday"];
          major?: parameters["rowFilter.2022_facebook.major"];
          phone?: parameters["rowFilter.2022_facebook.phone"];
          access_code?: parameters["rowFilter.2022_facebook.access_code"];
          middle_name?: parameters["rowFilter.2022_facebook.middle_name"];
          office_room?: parameters["rowFilter.2022_facebook.office_room"];
          website?: parameters["rowFilter.2022_facebook.website"];
          education?: parameters["rowFilter.2022_facebook.education"];
          name_recording?: parameters["rowFilter.2022_facebook.name_recording"];
          pronouns?: parameters["rowFilter.2022_facebook.pronouns"];
          phonetic_name?: parameters["rowFilter.2022_facebook.phonetic_name"];
          suffix?: parameters["rowFilter.2022_facebook.suffix"];
          fax?: parameters["rowFilter.2022_facebook.fax"];
          city_as_point?: parameters["rowFilter.2022_facebook.city_as_point"];
          birth_day?: parameters["rowFilter.2022_facebook.birth_day"];
          birth_month?: parameters["rowFilter.2022_facebook.birth_month"];
          visitor?: parameters["rowFilter.2022_facebook.visitor"];
          preferred_name?: parameters["rowFilter.2022_facebook.preferred_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.2022_facebook.id"];
          upi?: parameters["rowFilter.2022_facebook.upi"];
          netid?: parameters["rowFilter.2022_facebook.netid"];
          email?: parameters["rowFilter.2022_facebook.email"];
          mailbox?: parameters["rowFilter.2022_facebook.mailbox"];
          first_name?: parameters["rowFilter.2022_facebook.first_name"];
          last_name?: parameters["rowFilter.2022_facebook.last_name"];
          school_code?: parameters["rowFilter.2022_facebook.school_code"];
          school?: parameters["rowFilter.2022_facebook.school"];
          curriculum?: parameters["rowFilter.2022_facebook.curriculum"];
          organization_code?: parameters["rowFilter.2022_facebook.organization_code"];
          organization?: parameters["rowFilter.2022_facebook.organization"];
          title?: parameters["rowFilter.2022_facebook.title"];
          address?: parameters["rowFilter.2022_facebook.address"];
          unit_class?: parameters["rowFilter.2022_facebook.unit_class"];
          unit_code?: parameters["rowFilter.2022_facebook.unit_code"];
          unit?: parameters["rowFilter.2022_facebook.unit"];
          postal_address?: parameters["rowFilter.2022_facebook.postal_address"];
          office_building?: parameters["rowFilter.2022_facebook.office_building"];
          cv?: parameters["rowFilter.2022_facebook.cv"];
          profile?: parameters["rowFilter.2022_facebook.profile"];
          city?: parameters["rowFilter.2022_facebook.city"];
          year?: parameters["rowFilter.2022_facebook.year"];
          college?: parameters["rowFilter.2022_facebook.college"];
          college_code?: parameters["rowFilter.2022_facebook.college_code"];
          leave?: parameters["rowFilter.2022_facebook.leave"];
          eli_whitney?: parameters["rowFilter.2022_facebook.eli_whitney"];
          image?: parameters["rowFilter.2022_facebook.image"];
          birthday?: parameters["rowFilter.2022_facebook.birthday"];
          major?: parameters["rowFilter.2022_facebook.major"];
          phone?: parameters["rowFilter.2022_facebook.phone"];
          access_code?: parameters["rowFilter.2022_facebook.access_code"];
          middle_name?: parameters["rowFilter.2022_facebook.middle_name"];
          office_room?: parameters["rowFilter.2022_facebook.office_room"];
          website?: parameters["rowFilter.2022_facebook.website"];
          education?: parameters["rowFilter.2022_facebook.education"];
          name_recording?: parameters["rowFilter.2022_facebook.name_recording"];
          pronouns?: parameters["rowFilter.2022_facebook.pronouns"];
          phonetic_name?: parameters["rowFilter.2022_facebook.phonetic_name"];
          suffix?: parameters["rowFilter.2022_facebook.suffix"];
          fax?: parameters["rowFilter.2022_facebook.fax"];
          city_as_point?: parameters["rowFilter.2022_facebook.city_as_point"];
          birth_day?: parameters["rowFilter.2022_facebook.birth_day"];
          birth_month?: parameters["rowFilter.2022_facebook.birth_month"];
          visitor?: parameters["rowFilter.2022_facebook.visitor"];
          preferred_name?: parameters["rowFilter.2022_facebook.preferred_name"];
        };
        body: {
          /** 2022_facebook */
          "2022_facebook"?: definitions["2022_facebook"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/errors": {
    get: {
      parameters: {
        query: {
          email?: parameters["rowFilter.errors.email"];
          error?: parameters["rowFilter.errors.error"];
          date?: parameters["rowFilter.errors.date"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["errors"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** errors */
          errors?: definitions["errors"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          email?: parameters["rowFilter.errors.email"];
          error?: parameters["rowFilter.errors.error"];
          date?: parameters["rowFilter.errors.date"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          email?: parameters["rowFilter.errors.email"];
          error?: parameters["rowFilter.errors.error"];
          date?: parameters["rowFilter.errors.date"];
        };
        body: {
          /** errors */
          errors?: definitions["errors"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/feedback": {
    get: {
      parameters: {
        query: {
          email?: parameters["rowFilter.feedback.email"];
          feedback?: parameters["rowFilter.feedback.feedback"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["feedback"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** feedback */
          feedback?: definitions["feedback"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          email?: parameters["rowFilter.feedback.email"];
          feedback?: parameters["rowFilter.feedback.feedback"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          email?: parameters["rowFilter.feedback.email"];
          feedback?: parameters["rowFilter.feedback.feedback"];
        };
        body: {
          /** feedback */
          feedback?: definitions["feedback"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/geojson": {
    get: {
      parameters: {
        query: {
          request?: parameters["rowFilter.geojson.request"];
          geojson?: parameters["rowFilter.geojson.geojson"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["geojson"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** geojson */
          geojson?: definitions["geojson"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          request?: parameters["rowFilter.geojson.request"];
          geojson?: parameters["rowFilter.geojson.geojson"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          request?: parameters["rowFilter.geojson.request"];
          geojson?: parameters["rowFilter.geojson.geojson"];
        };
        body: {
          /** geojson */
          geojson?: definitions["geojson"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/junction_auth_email_to_user_data": {
    get: {
      parameters: {
        query: {
          /** Refers to user_data_from_google_auth */
          email?: parameters["rowFilter.junction_auth_email_to_user_data.email"];
          /** The corresponding ID Column from user_data */
          user_id?: parameters["rowFilter.junction_auth_email_to_user_data.user_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["junction_auth_email_to_user_data"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** junction_auth_email_to_user_data */
          junction_auth_email_to_user_data?: definitions["junction_auth_email_to_user_data"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          /** Refers to user_data_from_google_auth */
          email?: parameters["rowFilter.junction_auth_email_to_user_data.email"];
          /** The corresponding ID Column from user_data */
          user_id?: parameters["rowFilter.junction_auth_email_to_user_data.user_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          /** Refers to user_data_from_google_auth */
          email?: parameters["rowFilter.junction_auth_email_to_user_data.email"];
          /** The corresponding ID Column from user_data */
          user_id?: parameters["rowFilter.junction_auth_email_to_user_data.user_id"];
        };
        body: {
          /** junction_auth_email_to_user_data */
          junction_auth_email_to_user_data?: definitions["junction_auth_email_to_user_data"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/old_user_data": {
    get: {
      parameters: {
        query: {
          email?: parameters["rowFilter.old_user_data.email"];
          interests?: parameters["rowFilter.old_user_data.interests"];
          expression?: parameters["rowFilter.old_user_data.expression"];
          location?: parameters["rowFilter.old_user_data.location"];
          university?: parameters["rowFilter.old_user_data.university"];
          city_formatted_address?: parameters["rowFilter.old_user_data.city_formatted_address"];
          location_as_point?: parameters["rowFilter.old_user_data.location_as_point"];
          full_name?: parameters["rowFilter.old_user_data.full_name"];
          photo?: parameters["rowFilter.old_user_data.photo"];
          summer_in_new_haven?: parameters["rowFilter.old_user_data.summer_in_new_haven"];
          summer_in_new_haven_future?: parameters["rowFilter.old_user_data.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.old_user_data.instagram"];
          linkedin?: parameters["rowFilter.old_user_data.linkedin"];
          phone?: parameters["rowFilter.old_user_data.phone"];
          major?: parameters["rowFilter.old_user_data.major"];
          year?: parameters["rowFilter.old_user_data.year"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["old_user_data"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** old_user_data */
          old_user_data?: definitions["old_user_data"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          email?: parameters["rowFilter.old_user_data.email"];
          interests?: parameters["rowFilter.old_user_data.interests"];
          expression?: parameters["rowFilter.old_user_data.expression"];
          location?: parameters["rowFilter.old_user_data.location"];
          university?: parameters["rowFilter.old_user_data.university"];
          city_formatted_address?: parameters["rowFilter.old_user_data.city_formatted_address"];
          location_as_point?: parameters["rowFilter.old_user_data.location_as_point"];
          full_name?: parameters["rowFilter.old_user_data.full_name"];
          photo?: parameters["rowFilter.old_user_data.photo"];
          summer_in_new_haven?: parameters["rowFilter.old_user_data.summer_in_new_haven"];
          summer_in_new_haven_future?: parameters["rowFilter.old_user_data.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.old_user_data.instagram"];
          linkedin?: parameters["rowFilter.old_user_data.linkedin"];
          phone?: parameters["rowFilter.old_user_data.phone"];
          major?: parameters["rowFilter.old_user_data.major"];
          year?: parameters["rowFilter.old_user_data.year"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          email?: parameters["rowFilter.old_user_data.email"];
          interests?: parameters["rowFilter.old_user_data.interests"];
          expression?: parameters["rowFilter.old_user_data.expression"];
          location?: parameters["rowFilter.old_user_data.location"];
          university?: parameters["rowFilter.old_user_data.university"];
          city_formatted_address?: parameters["rowFilter.old_user_data.city_formatted_address"];
          location_as_point?: parameters["rowFilter.old_user_data.location_as_point"];
          full_name?: parameters["rowFilter.old_user_data.full_name"];
          photo?: parameters["rowFilter.old_user_data.photo"];
          summer_in_new_haven?: parameters["rowFilter.old_user_data.summer_in_new_haven"];
          summer_in_new_haven_future?: parameters["rowFilter.old_user_data.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.old_user_data.instagram"];
          linkedin?: parameters["rowFilter.old_user_data.linkedin"];
          phone?: parameters["rowFilter.old_user_data.phone"];
          major?: parameters["rowFilter.old_user_data.major"];
          year?: parameters["rowFilter.old_user_data.year"];
        };
        body: {
          /** old_user_data */
          old_user_data?: definitions["old_user_data"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/places": {
    get: {
      parameters: {
        query: {
          place_id?: parameters["rowFilter.places.place_id"];
          description?: parameters["rowFilter.places.description"];
          created_at?: parameters["rowFilter.places.created_at"];
          geog?: parameters["rowFilter.places.geog"];
          lng?: parameters["rowFilter.places.lng"];
          lat?: parameters["rowFilter.places.lat"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["places"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** places */
          places?: definitions["places"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          place_id?: parameters["rowFilter.places.place_id"];
          description?: parameters["rowFilter.places.description"];
          created_at?: parameters["rowFilter.places.created_at"];
          geog?: parameters["rowFilter.places.geog"];
          lng?: parameters["rowFilter.places.lng"];
          lat?: parameters["rowFilter.places.lat"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          place_id?: parameters["rowFilter.places.place_id"];
          description?: parameters["rowFilter.places.description"];
          created_at?: parameters["rowFilter.places.created_at"];
          geog?: parameters["rowFilter.places.geog"];
          lng?: parameters["rowFilter.places.lng"];
          lat?: parameters["rowFilter.places.lat"];
        };
        body: {
          /** places */
          places?: definitions["places"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/relationships_between_users": {
    get: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users.to_email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["relationships_between_users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** relationships_between_users */
          relationships_between_users?: definitions["relationships_between_users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users.to_email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users.to_email"];
        };
        body: {
          /** relationships_between_users */
          relationships_between_users?: definitions["relationships_between_users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/relationships_between_users_bidirectional": {
    get: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users_bidirectional.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users_bidirectional.to_email"];
          returning_from?: parameters["rowFilter.relationships_between_users_bidirectional.returning_from"];
          returning_to?: parameters["rowFilter.relationships_between_users_bidirectional.returning_to"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["relationships_between_users_bidirectional"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/relationships_between_users_old": {
    get: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users_old.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users_old.to_email"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["relationships_between_users_old"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** relationships_between_users_old */
          relationships_between_users_old?: definitions["relationships_between_users_old"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users_old.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users_old.to_email"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          from_email?: parameters["rowFilter.relationships_between_users_old.from_email"];
          to_email?: parameters["rowFilter.relationships_between_users_old.to_email"];
        };
        body: {
          /** relationships_between_users_old */
          relationships_between_users_old?: definitions["relationships_between_users_old"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_data_from_firebase": {
    get: {
      parameters: {
        query: {
          email?: parameters["rowFilter.user_data_from_firebase.email"];
          uid?: parameters["rowFilter.user_data_from_firebase.uid"];
          display_name?: parameters["rowFilter.user_data_from_firebase.display_name"];
          email_verified?: parameters["rowFilter.user_data_from_firebase.email_verified"];
          photo_url?: parameters["rowFilter.user_data_from_firebase.photo_url"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_data_from_firebase"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_data_from_firebase */
          user_data_from_firebase?: definitions["user_data_from_firebase"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          email?: parameters["rowFilter.user_data_from_firebase.email"];
          uid?: parameters["rowFilter.user_data_from_firebase.uid"];
          display_name?: parameters["rowFilter.user_data_from_firebase.display_name"];
          email_verified?: parameters["rowFilter.user_data_from_firebase.email_verified"];
          photo_url?: parameters["rowFilter.user_data_from_firebase.photo_url"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          email?: parameters["rowFilter.user_data_from_firebase.email"];
          uid?: parameters["rowFilter.user_data_from_firebase.uid"];
          display_name?: parameters["rowFilter.user_data_from_firebase.display_name"];
          email_verified?: parameters["rowFilter.user_data_from_firebase.email_verified"];
          photo_url?: parameters["rowFilter.user_data_from_firebase.photo_url"];
        };
        body: {
          /** user_data_from_firebase */
          user_data_from_firebase?: definitions["user_data_from_firebase"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/user_responses": {
    get: {
      parameters: {
        query: {
          interests?: parameters["rowFilter.user_responses.interests"];
          expression?: parameters["rowFilter.user_responses.expression"];
          university?: parameters["rowFilter.user_responses.university"];
          instagram?: parameters["rowFilter.user_responses.instagram"];
          linkedin?: parameters["rowFilter.user_responses.linkedin"];
          phone?: parameters["rowFilter.user_responses.phone"];
          major?: parameters["rowFilter.user_responses.major"];
          year?: parameters["rowFilter.user_responses.year"];
          /** Links to places */
          place_id?: parameters["rowFilter.user_responses.place_id"];
          user_response_id?: parameters["rowFilter.user_responses.user_response_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["user_responses"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** user_responses */
          user_responses?: definitions["user_responses"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          interests?: parameters["rowFilter.user_responses.interests"];
          expression?: parameters["rowFilter.user_responses.expression"];
          university?: parameters["rowFilter.user_responses.university"];
          instagram?: parameters["rowFilter.user_responses.instagram"];
          linkedin?: parameters["rowFilter.user_responses.linkedin"];
          phone?: parameters["rowFilter.user_responses.phone"];
          major?: parameters["rowFilter.user_responses.major"];
          year?: parameters["rowFilter.user_responses.year"];
          /** Links to places */
          place_id?: parameters["rowFilter.user_responses.place_id"];
          user_response_id?: parameters["rowFilter.user_responses.user_response_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          interests?: parameters["rowFilter.user_responses.interests"];
          expression?: parameters["rowFilter.user_responses.expression"];
          university?: parameters["rowFilter.user_responses.university"];
          instagram?: parameters["rowFilter.user_responses.instagram"];
          linkedin?: parameters["rowFilter.user_responses.linkedin"];
          phone?: parameters["rowFilter.user_responses.phone"];
          major?: parameters["rowFilter.user_responses.major"];
          year?: parameters["rowFilter.user_responses.year"];
          /** Links to places */
          place_id?: parameters["rowFilter.user_responses.place_id"];
          user_response_id?: parameters["rowFilter.user_responses.user_response_id"];
        };
        body: {
          /** user_responses */
          user_responses?: definitions["user_responses"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          email?: parameters["rowFilter.users.email"];
          email_verified?: parameters["rowFilter.users.email_verified"];
          full_name?: parameters["rowFilter.users.full_name"];
          name?: parameters["rowFilter.users.name"];
          picture?: parameters["rowFilter.users.picture"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          iss?: parameters["rowFilter.users.iss"];
          provider_id?: parameters["rowFilter.users.provider_id"];
          sub?: parameters["rowFilter.users.sub"];
          /** Unique key from Google Account */
          id?: parameters["rowFilter.users.id"];
          user_response_id?: parameters["rowFilter.users.user_response_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          email?: parameters["rowFilter.users.email"];
          email_verified?: parameters["rowFilter.users.email_verified"];
          full_name?: parameters["rowFilter.users.full_name"];
          name?: parameters["rowFilter.users.name"];
          picture?: parameters["rowFilter.users.picture"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          iss?: parameters["rowFilter.users.iss"];
          provider_id?: parameters["rowFilter.users.provider_id"];
          sub?: parameters["rowFilter.users.sub"];
          /** Unique key from Google Account */
          id?: parameters["rowFilter.users.id"];
          user_response_id?: parameters["rowFilter.users.user_response_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          email?: parameters["rowFilter.users.email"];
          email_verified?: parameters["rowFilter.users.email_verified"];
          full_name?: parameters["rowFilter.users.full_name"];
          name?: parameters["rowFilter.users.name"];
          picture?: parameters["rowFilter.users.picture"];
          avatar_url?: parameters["rowFilter.users.avatar_url"];
          iss?: parameters["rowFilter.users.iss"];
          provider_id?: parameters["rowFilter.users.provider_id"];
          sub?: parameters["rowFilter.users.sub"];
          /** Unique key from Google Account */
          id?: parameters["rowFilter.users.id"];
          user_response_id?: parameters["rowFilter.users.user_response_id"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users3": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users3.id"];
          upi?: parameters["rowFilter.users3.upi"];
          netid?: parameters["rowFilter.users3.netid"];
          email?: parameters["rowFilter.users3.email"];
          mailbox?: parameters["rowFilter.users3.mailbox"];
          first_name?: parameters["rowFilter.users3.first_name"];
          last_name?: parameters["rowFilter.users3.last_name"];
          school_code?: parameters["rowFilter.users3.school_code"];
          school?: parameters["rowFilter.users3.school"];
          curriculum?: parameters["rowFilter.users3.curriculum"];
          organization_code?: parameters["rowFilter.users3.organization_code"];
          organization?: parameters["rowFilter.users3.organization"];
          title?: parameters["rowFilter.users3.title"];
          address?: parameters["rowFilter.users3.address"];
          unit_class?: parameters["rowFilter.users3.unit_class"];
          unit_code?: parameters["rowFilter.users3.unit_code"];
          unit?: parameters["rowFilter.users3.unit"];
          postal_address?: parameters["rowFilter.users3.postal_address"];
          office_building?: parameters["rowFilter.users3.office_building"];
          cv?: parameters["rowFilter.users3.cv"];
          profile?: parameters["rowFilter.users3.profile"];
          city?: parameters["rowFilter.users3.city"];
          year?: parameters["rowFilter.users3.year"];
          college?: parameters["rowFilter.users3.college"];
          college_code?: parameters["rowFilter.users3.college_code"];
          leave?: parameters["rowFilter.users3.leave"];
          eli_whitney?: parameters["rowFilter.users3.eli_whitney"];
          image?: parameters["rowFilter.users3.image"];
          birthday?: parameters["rowFilter.users3.birthday"];
          major?: parameters["rowFilter.users3.major"];
          phone?: parameters["rowFilter.users3.phone"];
          access_code?: parameters["rowFilter.users3.access_code"];
          middle_name?: parameters["rowFilter.users3.middle_name"];
          office_room?: parameters["rowFilter.users3.office_room"];
          website?: parameters["rowFilter.users3.website"];
          education?: parameters["rowFilter.users3.education"];
          name_recording?: parameters["rowFilter.users3.name_recording"];
          pronouns?: parameters["rowFilter.users3.pronouns"];
          phonetic_name?: parameters["rowFilter.users3.phonetic_name"];
          suffix?: parameters["rowFilter.users3.suffix"];
          fax?: parameters["rowFilter.users3.fax"];
          city_as_point?: parameters["rowFilter.users3.city_as_point"];
          uid?: parameters["rowFilter.users3.uid"];
          display_name?: parameters["rowFilter.users3.display_name"];
          email_verified?: parameters["rowFilter.users3.email_verified"];
          photo_url?: parameters["rowFilter.users3.photo_url"];
          interests?: parameters["rowFilter.users3.interests"];
          expression?: parameters["rowFilter.users3.expression"];
          location?: parameters["rowFilter.users3.location"];
          university?: parameters["rowFilter.users3.university"];
          city_formatted_address?: parameters["rowFilter.users3.city_formatted_address"];
          location_as_point?: parameters["rowFilter.users3.location_as_point"];
          full_name?: parameters["rowFilter.users3.full_name"];
          photo?: parameters["rowFilter.users3.photo"];
          summer_in_new_haven?: parameters["rowFilter.users3.summer_in_new_haven"];
          /** Will be in New Haven before school starts */
          summer_in_new_haven_future?: parameters["rowFilter.users3.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.users3.instagram"];
          linkedin?: parameters["rowFilter.users3.linkedin"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users3"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users3 */
          users3?: definitions["users3"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users3.id"];
          upi?: parameters["rowFilter.users3.upi"];
          netid?: parameters["rowFilter.users3.netid"];
          email?: parameters["rowFilter.users3.email"];
          mailbox?: parameters["rowFilter.users3.mailbox"];
          first_name?: parameters["rowFilter.users3.first_name"];
          last_name?: parameters["rowFilter.users3.last_name"];
          school_code?: parameters["rowFilter.users3.school_code"];
          school?: parameters["rowFilter.users3.school"];
          curriculum?: parameters["rowFilter.users3.curriculum"];
          organization_code?: parameters["rowFilter.users3.organization_code"];
          organization?: parameters["rowFilter.users3.organization"];
          title?: parameters["rowFilter.users3.title"];
          address?: parameters["rowFilter.users3.address"];
          unit_class?: parameters["rowFilter.users3.unit_class"];
          unit_code?: parameters["rowFilter.users3.unit_code"];
          unit?: parameters["rowFilter.users3.unit"];
          postal_address?: parameters["rowFilter.users3.postal_address"];
          office_building?: parameters["rowFilter.users3.office_building"];
          cv?: parameters["rowFilter.users3.cv"];
          profile?: parameters["rowFilter.users3.profile"];
          city?: parameters["rowFilter.users3.city"];
          year?: parameters["rowFilter.users3.year"];
          college?: parameters["rowFilter.users3.college"];
          college_code?: parameters["rowFilter.users3.college_code"];
          leave?: parameters["rowFilter.users3.leave"];
          eli_whitney?: parameters["rowFilter.users3.eli_whitney"];
          image?: parameters["rowFilter.users3.image"];
          birthday?: parameters["rowFilter.users3.birthday"];
          major?: parameters["rowFilter.users3.major"];
          phone?: parameters["rowFilter.users3.phone"];
          access_code?: parameters["rowFilter.users3.access_code"];
          middle_name?: parameters["rowFilter.users3.middle_name"];
          office_room?: parameters["rowFilter.users3.office_room"];
          website?: parameters["rowFilter.users3.website"];
          education?: parameters["rowFilter.users3.education"];
          name_recording?: parameters["rowFilter.users3.name_recording"];
          pronouns?: parameters["rowFilter.users3.pronouns"];
          phonetic_name?: parameters["rowFilter.users3.phonetic_name"];
          suffix?: parameters["rowFilter.users3.suffix"];
          fax?: parameters["rowFilter.users3.fax"];
          city_as_point?: parameters["rowFilter.users3.city_as_point"];
          uid?: parameters["rowFilter.users3.uid"];
          display_name?: parameters["rowFilter.users3.display_name"];
          email_verified?: parameters["rowFilter.users3.email_verified"];
          photo_url?: parameters["rowFilter.users3.photo_url"];
          interests?: parameters["rowFilter.users3.interests"];
          expression?: parameters["rowFilter.users3.expression"];
          location?: parameters["rowFilter.users3.location"];
          university?: parameters["rowFilter.users3.university"];
          city_formatted_address?: parameters["rowFilter.users3.city_formatted_address"];
          location_as_point?: parameters["rowFilter.users3.location_as_point"];
          full_name?: parameters["rowFilter.users3.full_name"];
          photo?: parameters["rowFilter.users3.photo"];
          summer_in_new_haven?: parameters["rowFilter.users3.summer_in_new_haven"];
          /** Will be in New Haven before school starts */
          summer_in_new_haven_future?: parameters["rowFilter.users3.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.users3.instagram"];
          linkedin?: parameters["rowFilter.users3.linkedin"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users3.id"];
          upi?: parameters["rowFilter.users3.upi"];
          netid?: parameters["rowFilter.users3.netid"];
          email?: parameters["rowFilter.users3.email"];
          mailbox?: parameters["rowFilter.users3.mailbox"];
          first_name?: parameters["rowFilter.users3.first_name"];
          last_name?: parameters["rowFilter.users3.last_name"];
          school_code?: parameters["rowFilter.users3.school_code"];
          school?: parameters["rowFilter.users3.school"];
          curriculum?: parameters["rowFilter.users3.curriculum"];
          organization_code?: parameters["rowFilter.users3.organization_code"];
          organization?: parameters["rowFilter.users3.organization"];
          title?: parameters["rowFilter.users3.title"];
          address?: parameters["rowFilter.users3.address"];
          unit_class?: parameters["rowFilter.users3.unit_class"];
          unit_code?: parameters["rowFilter.users3.unit_code"];
          unit?: parameters["rowFilter.users3.unit"];
          postal_address?: parameters["rowFilter.users3.postal_address"];
          office_building?: parameters["rowFilter.users3.office_building"];
          cv?: parameters["rowFilter.users3.cv"];
          profile?: parameters["rowFilter.users3.profile"];
          city?: parameters["rowFilter.users3.city"];
          year?: parameters["rowFilter.users3.year"];
          college?: parameters["rowFilter.users3.college"];
          college_code?: parameters["rowFilter.users3.college_code"];
          leave?: parameters["rowFilter.users3.leave"];
          eli_whitney?: parameters["rowFilter.users3.eli_whitney"];
          image?: parameters["rowFilter.users3.image"];
          birthday?: parameters["rowFilter.users3.birthday"];
          major?: parameters["rowFilter.users3.major"];
          phone?: parameters["rowFilter.users3.phone"];
          access_code?: parameters["rowFilter.users3.access_code"];
          middle_name?: parameters["rowFilter.users3.middle_name"];
          office_room?: parameters["rowFilter.users3.office_room"];
          website?: parameters["rowFilter.users3.website"];
          education?: parameters["rowFilter.users3.education"];
          name_recording?: parameters["rowFilter.users3.name_recording"];
          pronouns?: parameters["rowFilter.users3.pronouns"];
          phonetic_name?: parameters["rowFilter.users3.phonetic_name"];
          suffix?: parameters["rowFilter.users3.suffix"];
          fax?: parameters["rowFilter.users3.fax"];
          city_as_point?: parameters["rowFilter.users3.city_as_point"];
          uid?: parameters["rowFilter.users3.uid"];
          display_name?: parameters["rowFilter.users3.display_name"];
          email_verified?: parameters["rowFilter.users3.email_verified"];
          photo_url?: parameters["rowFilter.users3.photo_url"];
          interests?: parameters["rowFilter.users3.interests"];
          expression?: parameters["rowFilter.users3.expression"];
          location?: parameters["rowFilter.users3.location"];
          university?: parameters["rowFilter.users3.university"];
          city_formatted_address?: parameters["rowFilter.users3.city_formatted_address"];
          location_as_point?: parameters["rowFilter.users3.location_as_point"];
          full_name?: parameters["rowFilter.users3.full_name"];
          photo?: parameters["rowFilter.users3.photo"];
          summer_in_new_haven?: parameters["rowFilter.users3.summer_in_new_haven"];
          /** Will be in New Haven before school starts */
          summer_in_new_haven_future?: parameters["rowFilter.users3.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.users3.instagram"];
          linkedin?: parameters["rowFilter.users3.linkedin"];
        };
        body: {
          /** users3 */
          users3?: definitions["users3"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users_from_yale_facebook_new": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users_from_yale_facebook_new.id"];
          upi?: parameters["rowFilter.users_from_yale_facebook_new.upi"];
          netid?: parameters["rowFilter.users_from_yale_facebook_new.netid"];
          email?: parameters["rowFilter.users_from_yale_facebook_new.email"];
          mailbox?: parameters["rowFilter.users_from_yale_facebook_new.mailbox"];
          first_name?: parameters["rowFilter.users_from_yale_facebook_new.first_name"];
          last_name?: parameters["rowFilter.users_from_yale_facebook_new.last_name"];
          school_code?: parameters["rowFilter.users_from_yale_facebook_new.school_code"];
          school?: parameters["rowFilter.users_from_yale_facebook_new.school"];
          curriculum?: parameters["rowFilter.users_from_yale_facebook_new.curriculum"];
          organization_code?: parameters["rowFilter.users_from_yale_facebook_new.organization_code"];
          organization?: parameters["rowFilter.users_from_yale_facebook_new.organization"];
          title?: parameters["rowFilter.users_from_yale_facebook_new.title"];
          address?: parameters["rowFilter.users_from_yale_facebook_new.address"];
          unit_class?: parameters["rowFilter.users_from_yale_facebook_new.unit_class"];
          unit_code?: parameters["rowFilter.users_from_yale_facebook_new.unit_code"];
          unit?: parameters["rowFilter.users_from_yale_facebook_new.unit"];
          postal_address?: parameters["rowFilter.users_from_yale_facebook_new.postal_address"];
          office_building?: parameters["rowFilter.users_from_yale_facebook_new.office_building"];
          cv?: parameters["rowFilter.users_from_yale_facebook_new.cv"];
          profile?: parameters["rowFilter.users_from_yale_facebook_new.profile"];
          city?: parameters["rowFilter.users_from_yale_facebook_new.city"];
          year?: parameters["rowFilter.users_from_yale_facebook_new.year"];
          college?: parameters["rowFilter.users_from_yale_facebook_new.college"];
          college_code?: parameters["rowFilter.users_from_yale_facebook_new.college_code"];
          leave?: parameters["rowFilter.users_from_yale_facebook_new.leave"];
          eli_whitney?: parameters["rowFilter.users_from_yale_facebook_new.eli_whitney"];
          image?: parameters["rowFilter.users_from_yale_facebook_new.image"];
          birthday?: parameters["rowFilter.users_from_yale_facebook_new.birthday"];
          major?: parameters["rowFilter.users_from_yale_facebook_new.major"];
          phone?: parameters["rowFilter.users_from_yale_facebook_new.phone"];
          access_code?: parameters["rowFilter.users_from_yale_facebook_new.access_code"];
          middle_name?: parameters["rowFilter.users_from_yale_facebook_new.middle_name"];
          office_room?: parameters["rowFilter.users_from_yale_facebook_new.office_room"];
          website?: parameters["rowFilter.users_from_yale_facebook_new.website"];
          education?: parameters["rowFilter.users_from_yale_facebook_new.education"];
          name_recording?: parameters["rowFilter.users_from_yale_facebook_new.name_recording"];
          pronouns?: parameters["rowFilter.users_from_yale_facebook_new.pronouns"];
          phonetic_name?: parameters["rowFilter.users_from_yale_facebook_new.phonetic_name"];
          suffix?: parameters["rowFilter.users_from_yale_facebook_new.suffix"];
          fax?: parameters["rowFilter.users_from_yale_facebook_new.fax"];
          city_as_point?: parameters["rowFilter.users_from_yale_facebook_new.city_as_point"];
          birth_day?: parameters["rowFilter.users_from_yale_facebook_new.birth_day"];
          birth_month?: parameters["rowFilter.users_from_yale_facebook_new.birth_month"];
          visitor?: parameters["rowFilter.users_from_yale_facebook_new.visitor"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users_from_yale_facebook_new"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users_from_yale_facebook_new */
          users_from_yale_facebook_new?: definitions["users_from_yale_facebook_new"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users_from_yale_facebook_new.id"];
          upi?: parameters["rowFilter.users_from_yale_facebook_new.upi"];
          netid?: parameters["rowFilter.users_from_yale_facebook_new.netid"];
          email?: parameters["rowFilter.users_from_yale_facebook_new.email"];
          mailbox?: parameters["rowFilter.users_from_yale_facebook_new.mailbox"];
          first_name?: parameters["rowFilter.users_from_yale_facebook_new.first_name"];
          last_name?: parameters["rowFilter.users_from_yale_facebook_new.last_name"];
          school_code?: parameters["rowFilter.users_from_yale_facebook_new.school_code"];
          school?: parameters["rowFilter.users_from_yale_facebook_new.school"];
          curriculum?: parameters["rowFilter.users_from_yale_facebook_new.curriculum"];
          organization_code?: parameters["rowFilter.users_from_yale_facebook_new.organization_code"];
          organization?: parameters["rowFilter.users_from_yale_facebook_new.organization"];
          title?: parameters["rowFilter.users_from_yale_facebook_new.title"];
          address?: parameters["rowFilter.users_from_yale_facebook_new.address"];
          unit_class?: parameters["rowFilter.users_from_yale_facebook_new.unit_class"];
          unit_code?: parameters["rowFilter.users_from_yale_facebook_new.unit_code"];
          unit?: parameters["rowFilter.users_from_yale_facebook_new.unit"];
          postal_address?: parameters["rowFilter.users_from_yale_facebook_new.postal_address"];
          office_building?: parameters["rowFilter.users_from_yale_facebook_new.office_building"];
          cv?: parameters["rowFilter.users_from_yale_facebook_new.cv"];
          profile?: parameters["rowFilter.users_from_yale_facebook_new.profile"];
          city?: parameters["rowFilter.users_from_yale_facebook_new.city"];
          year?: parameters["rowFilter.users_from_yale_facebook_new.year"];
          college?: parameters["rowFilter.users_from_yale_facebook_new.college"];
          college_code?: parameters["rowFilter.users_from_yale_facebook_new.college_code"];
          leave?: parameters["rowFilter.users_from_yale_facebook_new.leave"];
          eli_whitney?: parameters["rowFilter.users_from_yale_facebook_new.eli_whitney"];
          image?: parameters["rowFilter.users_from_yale_facebook_new.image"];
          birthday?: parameters["rowFilter.users_from_yale_facebook_new.birthday"];
          major?: parameters["rowFilter.users_from_yale_facebook_new.major"];
          phone?: parameters["rowFilter.users_from_yale_facebook_new.phone"];
          access_code?: parameters["rowFilter.users_from_yale_facebook_new.access_code"];
          middle_name?: parameters["rowFilter.users_from_yale_facebook_new.middle_name"];
          office_room?: parameters["rowFilter.users_from_yale_facebook_new.office_room"];
          website?: parameters["rowFilter.users_from_yale_facebook_new.website"];
          education?: parameters["rowFilter.users_from_yale_facebook_new.education"];
          name_recording?: parameters["rowFilter.users_from_yale_facebook_new.name_recording"];
          pronouns?: parameters["rowFilter.users_from_yale_facebook_new.pronouns"];
          phonetic_name?: parameters["rowFilter.users_from_yale_facebook_new.phonetic_name"];
          suffix?: parameters["rowFilter.users_from_yale_facebook_new.suffix"];
          fax?: parameters["rowFilter.users_from_yale_facebook_new.fax"];
          city_as_point?: parameters["rowFilter.users_from_yale_facebook_new.city_as_point"];
          birth_day?: parameters["rowFilter.users_from_yale_facebook_new.birth_day"];
          birth_month?: parameters["rowFilter.users_from_yale_facebook_new.birth_month"];
          visitor?: parameters["rowFilter.users_from_yale_facebook_new.visitor"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users_from_yale_facebook_new.id"];
          upi?: parameters["rowFilter.users_from_yale_facebook_new.upi"];
          netid?: parameters["rowFilter.users_from_yale_facebook_new.netid"];
          email?: parameters["rowFilter.users_from_yale_facebook_new.email"];
          mailbox?: parameters["rowFilter.users_from_yale_facebook_new.mailbox"];
          first_name?: parameters["rowFilter.users_from_yale_facebook_new.first_name"];
          last_name?: parameters["rowFilter.users_from_yale_facebook_new.last_name"];
          school_code?: parameters["rowFilter.users_from_yale_facebook_new.school_code"];
          school?: parameters["rowFilter.users_from_yale_facebook_new.school"];
          curriculum?: parameters["rowFilter.users_from_yale_facebook_new.curriculum"];
          organization_code?: parameters["rowFilter.users_from_yale_facebook_new.organization_code"];
          organization?: parameters["rowFilter.users_from_yale_facebook_new.organization"];
          title?: parameters["rowFilter.users_from_yale_facebook_new.title"];
          address?: parameters["rowFilter.users_from_yale_facebook_new.address"];
          unit_class?: parameters["rowFilter.users_from_yale_facebook_new.unit_class"];
          unit_code?: parameters["rowFilter.users_from_yale_facebook_new.unit_code"];
          unit?: parameters["rowFilter.users_from_yale_facebook_new.unit"];
          postal_address?: parameters["rowFilter.users_from_yale_facebook_new.postal_address"];
          office_building?: parameters["rowFilter.users_from_yale_facebook_new.office_building"];
          cv?: parameters["rowFilter.users_from_yale_facebook_new.cv"];
          profile?: parameters["rowFilter.users_from_yale_facebook_new.profile"];
          city?: parameters["rowFilter.users_from_yale_facebook_new.city"];
          year?: parameters["rowFilter.users_from_yale_facebook_new.year"];
          college?: parameters["rowFilter.users_from_yale_facebook_new.college"];
          college_code?: parameters["rowFilter.users_from_yale_facebook_new.college_code"];
          leave?: parameters["rowFilter.users_from_yale_facebook_new.leave"];
          eli_whitney?: parameters["rowFilter.users_from_yale_facebook_new.eli_whitney"];
          image?: parameters["rowFilter.users_from_yale_facebook_new.image"];
          birthday?: parameters["rowFilter.users_from_yale_facebook_new.birthday"];
          major?: parameters["rowFilter.users_from_yale_facebook_new.major"];
          phone?: parameters["rowFilter.users_from_yale_facebook_new.phone"];
          access_code?: parameters["rowFilter.users_from_yale_facebook_new.access_code"];
          middle_name?: parameters["rowFilter.users_from_yale_facebook_new.middle_name"];
          office_room?: parameters["rowFilter.users_from_yale_facebook_new.office_room"];
          website?: parameters["rowFilter.users_from_yale_facebook_new.website"];
          education?: parameters["rowFilter.users_from_yale_facebook_new.education"];
          name_recording?: parameters["rowFilter.users_from_yale_facebook_new.name_recording"];
          pronouns?: parameters["rowFilter.users_from_yale_facebook_new.pronouns"];
          phonetic_name?: parameters["rowFilter.users_from_yale_facebook_new.phonetic_name"];
          suffix?: parameters["rowFilter.users_from_yale_facebook_new.suffix"];
          fax?: parameters["rowFilter.users_from_yale_facebook_new.fax"];
          city_as_point?: parameters["rowFilter.users_from_yale_facebook_new.city_as_point"];
          birth_day?: parameters["rowFilter.users_from_yale_facebook_new.birth_day"];
          birth_month?: parameters["rowFilter.users_from_yale_facebook_new.birth_month"];
          visitor?: parameters["rowFilter.users_from_yale_facebook_new.visitor"];
        };
        body: {
          /** users_from_yale_facebook_new */
          users_from_yale_facebook_new?: definitions["users_from_yale_facebook_new"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users_times_available": {
    get: {
      parameters: {
        query: {
          email?: parameters["rowFilter.users_times_available.email"];
          start?: parameters["rowFilter.users_times_available.start"];
          end?: parameters["rowFilter.users_times_available.end"];
          /** Plans for the user while they're in the lobby */
          plans?: parameters["rowFilter.users_times_available.plans"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users_times_available"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users_times_available */
          users_times_available?: definitions["users_times_available"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          email?: parameters["rowFilter.users_times_available.email"];
          start?: parameters["rowFilter.users_times_available.start"];
          end?: parameters["rowFilter.users_times_available.end"];
          /** Plans for the user while they're in the lobby */
          plans?: parameters["rowFilter.users_times_available.plans"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          email?: parameters["rowFilter.users_times_available.email"];
          start?: parameters["rowFilter.users_times_available.start"];
          end?: parameters["rowFilter.users_times_available.end"];
          /** Plans for the user while they're in the lobby */
          plans?: parameters["rowFilter.users_times_available.plans"];
        };
        body: {
          /** users_times_available */
          users_times_available?: definitions["users_times_available"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users_times_available_joined_with_users": {
    get: {
      parameters: {
        query: {
          start?: parameters["rowFilter.users_times_available_joined_with_users.start"];
          end?: parameters["rowFilter.users_times_available_joined_with_users.end"];
          plans?: parameters["rowFilter.users_times_available_joined_with_users.plans"];
          netid?: parameters["rowFilter.users_times_available_joined_with_users.netid"];
          full_name?: parameters["rowFilter.users_times_available_joined_with_users.full_name"];
          uid?: parameters["rowFilter.users_times_available_joined_with_users.uid"];
          photo?: parameters["rowFilter.users_times_available_joined_with_users.photo"];
          email?: parameters["rowFilter.users_times_available_joined_with_users.email"];
          school?: parameters["rowFilter.users_times_available_joined_with_users.school"];
          address?: parameters["rowFilter.users_times_available_joined_with_users.address"];
          year?: parameters["rowFilter.users_times_available_joined_with_users.year"];
          college?: parameters["rowFilter.users_times_available_joined_with_users.college"];
          college_code?: parameters["rowFilter.users_times_available_joined_with_users.college_code"];
          birthday?: parameters["rowFilter.users_times_available_joined_with_users.birthday"];
          major?: parameters["rowFilter.users_times_available_joined_with_users.major"];
          phone?: parameters["rowFilter.users_times_available_joined_with_users.phone"];
          location?: parameters["rowFilter.users_times_available_joined_with_users.location"];
          location_as_point?: parameters["rowFilter.users_times_available_joined_with_users.location_as_point"];
          interests?: parameters["rowFilter.users_times_available_joined_with_users.interests"];
          expression?: parameters["rowFilter.users_times_available_joined_with_users.expression"];
          university?: parameters["rowFilter.users_times_available_joined_with_users.university"];
          summer_in_new_haven?: parameters["rowFilter.users_times_available_joined_with_users.summer_in_new_haven"];
          summer_in_new_haven_future?: parameters["rowFilter.users_times_available_joined_with_users.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.users_times_available_joined_with_users.instagram"];
          linkedin?: parameters["rowFilter.users_times_available_joined_with_users.linkedin"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users_times_available_joined_with_users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/users_to_places": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users_to_places.id"];
          name?: parameters["rowFilter.users_to_places.name"];
          avatar_url?: parameters["rowFilter.users_to_places.avatar_url"];
          place_id?: parameters["rowFilter.users_to_places.place_id"];
          description?: parameters["rowFilter.users_to_places.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users_to_places"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/users_view": {
    get: {
      parameters: {
        query: {
          netid?: parameters["rowFilter.users_view.netid"];
          full_name?: parameters["rowFilter.users_view.full_name"];
          uid?: parameters["rowFilter.users_view.uid"];
          photo?: parameters["rowFilter.users_view.photo"];
          email?: parameters["rowFilter.users_view.email"];
          school?: parameters["rowFilter.users_view.school"];
          address?: parameters["rowFilter.users_view.address"];
          year?: parameters["rowFilter.users_view.year"];
          college?: parameters["rowFilter.users_view.college"];
          college_code?: parameters["rowFilter.users_view.college_code"];
          birthday?: parameters["rowFilter.users_view.birthday"];
          major?: parameters["rowFilter.users_view.major"];
          phone?: parameters["rowFilter.users_view.phone"];
          location?: parameters["rowFilter.users_view.location"];
          location_as_point?: parameters["rowFilter.users_view.location_as_point"];
          interests?: parameters["rowFilter.users_view.interests"];
          expression?: parameters["rowFilter.users_view.expression"];
          university?: parameters["rowFilter.users_view.university"];
          summer_in_new_haven?: parameters["rowFilter.users_view.summer_in_new_haven"];
          summer_in_new_haven_future?: parameters["rowFilter.users_view.summer_in_new_haven_future"];
          instagram?: parameters["rowFilter.users_view.instagram"];
          linkedin?: parameters["rowFilter.users_view.linkedin"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users_view"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  "/rpc/processtogeojson": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            class_year_to_filter_with: number;
            /** Format: text */
            name_to_place_in_query_column: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/relationships_get_fams": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            query_email: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/fetch_locations": {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/autocomplete_match_query_to_users": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            limit_to_this_class_year: number;
            /** Format: character varying */
            query: string;
            /** Format: character varying */
            current_user_email: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/relationships_get_bidirectional": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            email: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/relationships_get_incoming": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            query_email: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/autocomplete_match_query_to_users_filter_current_yams": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            limit_to_this_class_year: number;
            /** Format: character varying */
            query: string;
            /** Format: character varying */
            current_user_email: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/find_closest_user": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: numeric */
            longitude: number;
            /** Format: numeric */
            latitude: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/rpc/relationships_get_outgoing": {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            query_email: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferParams"];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  "2022_facebook": {
    /** Format: integer */
    id?: number;
    /** Format: integer */
    upi?: number;
    /** Format: character varying */
    netid?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    /** Format: character varying */
    mailbox?: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: character varying */
    school_code?: string;
    /** Format: character varying */
    school?: string;
    /** Format: character varying */
    curriculum?: string;
    /** Format: character varying */
    organization_code?: string;
    /** Format: character varying */
    organization?: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    address?: string;
    /** Format: character varying */
    unit_class?: string;
    /** Format: character varying */
    unit_code?: string;
    /** Format: character varying */
    unit?: string;
    /** Format: character varying */
    postal_address?: string;
    /** Format: character varying */
    office_building?: string;
    /** Format: character varying */
    cv?: string;
    /** Format: character varying */
    profile?: string;
    /** Format: json */
    city?: string;
    /** Format: integer */
    year?: number;
    /** Format: character varying */
    college?: string;
    /** Format: character varying */
    college_code?: string;
    /** Format: boolean */
    leave?: boolean;
    /** Format: boolean */
    eli_whitney?: boolean;
    /** Format: character varying */
    image?: string;
    /** Format: character varying */
    birthday?: string;
    /** Format: character varying */
    major?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: character varying */
    access_code?: string;
    /** Format: character varying */
    middle_name?: string;
    /** Format: character varying */
    office_room?: string;
    /** Format: character varying */
    website?: string;
    /** Format: character varying */
    education?: string;
    /** Format: character varying */
    name_recording?: string;
    /** Format: character varying */
    pronouns?: string;
    /** Format: character varying */
    phonetic_name?: string;
    /** Format: character varying */
    suffix?: string;
    /** Format: bigint */
    fax?: number;
    /** Format: extensions.geometry(Point,4326) */
    city_as_point?: string;
    /** Format: character varying */
    birth_day?: string;
    /** Format: character varying */
    birth_month?: string;
    /** Format: boolean */
    visitor?: boolean;
    /** Format: character varying */
    preferred_name?: string;
  };
  errors: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `users3.email`.<fk table='users3' column='email'/>
     */
    email: string;
    /** Format: json */
    error: string;
    /**
     * Format: timestamp without time zone
     * @default CURRENT_TIMESTAMP
     */
    date?: string;
  };
  feedback: {
    /** Format: character varying */
    email?: string;
    /** Format: character varying */
    feedback?: string;
  };
  geojson: {
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    request: string;
    /** Format: json */
    geojson?: string;
  };
  /** @description Junction table that, given a login email, links it to the id of the corresponding row in user_data */
  junction_auth_email_to_user_data: {
    /**
     * Format: character varying
     * @description Refers to user_data_from_google_auth
     *
     * Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    /**
     * Format: uuid
     * @description The corresponding ID Column from user_data
     */
    user_id: string;
  };
  old_user_data: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    /** Format: character varying */
    interests?: string;
    /** Format: character varying */
    expression?: string;
    /** Format: json */
    location?: string;
    /** Format: character varying */
    university?: string;
    /** Format: character varying */
    city_formatted_address?: string;
    /** Format: extensions.geometry */
    location_as_point?: string;
    /** Format: character varying */
    full_name?: string;
    /** Format: character varying */
    photo?: string;
    /**
     * Format: boolean
     * @default true
     */
    summer_in_new_haven?: boolean;
    /** Format: boolean */
    summer_in_new_haven_future?: boolean;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    linkedin?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: character varying */
    major?: string;
    /** Format: integer */
    year?: number;
  };
  places: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    place_id: string;
    /** Format: character varying */
    description: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: extensions.geography */
    geog?: string;
    /** Format: double precision */
    lng?: number;
    /** Format: double precision */
    lat?: number;
  };
  relationships_between_users: {
    /** Format: character varying */
    from_email: string;
    /** Format: character varying */
    to_email: string;
  };
  relationships_between_users_bidirectional: {
    /** Format: character varying */
    from_email?: string;
    /** Format: character varying */
    to_email?: string;
    /** Format: character varying */
    returning_from?: string;
    /** Format: character varying */
    returning_to?: string;
  };
  relationships_between_users_old: {
    /** Format: character varying */
    from_email?: string;
    /** Format: character varying */
    to_email?: string;
  };
  user_data_from_firebase: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default NULL
     */
    email: string;
    /** Format: character varying */
    uid?: string;
    /** Format: character varying */
    display_name?: string;
    /** Format: boolean */
    email_verified?: boolean;
    /** Format: character varying */
    photo_url?: string;
  };
  user_responses: {
    /** Format: character varying */
    interests?: string;
    /** Format: character varying */
    expression?: string;
    /** Format: character varying */
    university?: string;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    linkedin?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: character varying */
    major?: string;
    /** Format: integer */
    year?: number;
    /**
     * Format: character varying
     * @description Links to places
     *
     * Note:
     * This is a Foreign Key to `places.place_id`.<fk table='places' column='place_id'/>
     */
    place_id?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    user_response_id: string;
  };
  users: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `2022_facebook.email`.<fk table='2022_facebook' column='email'/>
     */
    email: string;
    /** Format: boolean */
    email_verified?: boolean;
    /** Format: character varying */
    full_name?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    picture?: string;
    /** Format: character varying */
    avatar_url?: string;
    /** Format: character varying */
    iss?: string;
    /** Format: character varying */
    provider_id?: string;
    /** Format: character varying */
    sub?: string;
    /**
     * Format: uuid
     * @description Unique key from Google Account
     *
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Foreign Key to `user_responses.user_response_id`.<fk table='user_responses' column='user_response_id'/>
     */
    user_response_id: string;
  };
  users3: {
    /** Format: integer */
    id?: number;
    /** Format: integer */
    upi?: number;
    /** Format: character varying */
    netid?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    /** Format: character varying */
    mailbox?: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: character varying */
    school_code?: string;
    /** Format: character varying */
    school?: string;
    /** Format: character varying */
    curriculum?: string;
    /** Format: character varying */
    organization_code?: string;
    /** Format: character varying */
    organization?: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    address?: string;
    /** Format: character varying */
    unit_class?: string;
    /** Format: character varying */
    unit_code?: string;
    /** Format: character varying */
    unit?: string;
    /** Format: character varying */
    postal_address?: string;
    /** Format: character varying */
    office_building?: string;
    /** Format: character varying */
    cv?: string;
    /** Format: character varying */
    profile?: string;
    /** Format: json */
    city?: string;
    /** Format: integer */
    year?: number;
    /** Format: character varying */
    college?: string;
    /** Format: character varying */
    college_code?: string;
    /** Format: boolean */
    leave?: boolean;
    /** Format: boolean */
    eli_whitney?: boolean;
    /** Format: character varying */
    image?: string;
    /** Format: character varying */
    birthday?: string;
    /** Format: character varying */
    major?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: character varying */
    access_code?: string;
    /** Format: character varying */
    middle_name?: string;
    /** Format: character varying */
    office_room?: string;
    /** Format: character varying */
    website?: string;
    /** Format: character varying */
    education?: string;
    /** Format: character varying */
    name_recording?: string;
    /** Format: character varying */
    pronouns?: string;
    /** Format: character varying */
    phonetic_name?: string;
    /** Format: character varying */
    suffix?: string;
    /** Format: bigint */
    fax?: number;
    /** Format: extensions.geometry(Point,4326) */
    city_as_point?: string;
    /** Format: character varying */
    uid?: string;
    /** Format: character varying */
    display_name?: string;
    /** Format: boolean */
    email_verified?: boolean;
    /** Format: character varying */
    photo_url?: string;
    /** Format: character varying */
    interests?: string;
    /** Format: character varying */
    expression?: string;
    /** Format: json */
    location?: string;
    /** Format: character varying */
    university?: string;
    /**
     * Format: character varying
     * @default (city ->> 'formatted_address'::text)
     */
    city_formatted_address?: string;
    /**
     * Format: extensions.geometry
     * @default extensions.st_setsrid(extensions.st_makepoint((((location ->> 'longitude'::text))::numeric)::double precision, (((location ->> 'latitude'::text))::numeric)::double precision), 4326)
     */
    location_as_point?: string;
    /** Format: character varying */
    full_name?: string;
    /**
     * Format: character varying
     * @default COALESCE(photo_url, image)
     */
    photo?: string;
    /** Format: boolean */
    summer_in_new_haven?: boolean;
    /**
     * Format: boolean
     * @description Will be in New Haven before school starts
     */
    summer_in_new_haven_future?: boolean;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    linkedin?: string;
  };
  users_from_yale_facebook_new: {
    /** Format: integer */
    id?: number;
    /** Format: integer */
    upi?: number;
    /** Format: character varying */
    netid?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    /** Format: character varying */
    mailbox?: string;
    /** Format: character varying */
    first_name?: string;
    /** Format: character varying */
    last_name?: string;
    /** Format: character varying */
    school_code?: string;
    /** Format: character varying */
    school?: string;
    /** Format: character varying */
    curriculum?: string;
    /** Format: character varying */
    organization_code?: string;
    /** Format: character varying */
    organization?: string;
    /** Format: character varying */
    title?: string;
    /** Format: character varying */
    address?: string;
    /** Format: character varying */
    unit_class?: string;
    /** Format: character varying */
    unit_code?: string;
    /** Format: character varying */
    unit?: string;
    /** Format: character varying */
    postal_address?: string;
    /** Format: character varying */
    office_building?: string;
    /** Format: character varying */
    cv?: string;
    /** Format: character varying */
    profile?: string;
    /** Format: json */
    city?: string;
    /** Format: integer */
    year?: number;
    /** Format: character varying */
    college?: string;
    /** Format: character varying */
    college_code?: string;
    /** Format: boolean */
    leave?: boolean;
    /** Format: boolean */
    eli_whitney?: boolean;
    /** Format: character varying */
    image?: string;
    /** Format: character varying */
    birthday?: string;
    /** Format: character varying */
    major?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: character varying */
    access_code?: string;
    /** Format: character varying */
    middle_name?: string;
    /** Format: character varying */
    office_room?: string;
    /** Format: character varying */
    website?: string;
    /** Format: character varying */
    education?: string;
    /** Format: character varying */
    name_recording?: string;
    /** Format: character varying */
    pronouns?: string;
    /** Format: character varying */
    phonetic_name?: string;
    /** Format: character varying */
    suffix?: string;
    /** Format: bigint */
    fax?: number;
    /** Format: extensions.geometry(Point,4326) */
    city_as_point?: string;
    /** Format: character varying */
    birth_day?: string;
    /** Format: character varying */
    birth_month?: string;
    /** Format: boolean */
    visitor?: boolean;
  };
  /** @description Time ranges of availability of users */
  users_times_available: {
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email: string;
    /**
     * Format: timestamp without time zone
     * @default now()
     */
    start: string;
    /** Format: timestamp without time zone */
    end: string;
    /**
     * Format: character varying
     * @description Plans for the user while they're in the lobby
     */
    plans?: string;
  };
  users_times_available_joined_with_users: {
    /** Format: timestamp without time zone */
    start?: string;
    /** Format: timestamp without time zone */
    end?: string;
    /** Format: character varying */
    plans?: string;
    /** Format: character varying */
    netid?: string;
    /** Format: character varying */
    full_name?: string;
    /** Format: character varying */
    uid?: string;
    /** Format: character varying */
    photo?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email?: string;
    /** Format: character varying */
    school?: string;
    /** Format: character varying */
    address?: string;
    /** Format: integer */
    year?: number;
    /** Format: character varying */
    college?: string;
    /** Format: character varying */
    college_code?: string;
    /** Format: character varying */
    birthday?: string;
    /** Format: character varying */
    major?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: json */
    location?: string;
    /** Format: extensions.geometry */
    location_as_point?: string;
    /** Format: character varying */
    interests?: string;
    /** Format: character varying */
    expression?: string;
    /** Format: character varying */
    university?: string;
    /** Format: boolean */
    summer_in_new_haven?: boolean;
    /** Format: boolean */
    summer_in_new_haven_future?: boolean;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    linkedin?: string;
  };
  users_to_places: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: character varying */
    name?: string;
    /** Format: character varying */
    avatar_url?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    place_id?: string;
    /** Format: character varying */
    description?: string;
  };
  users_view: {
    /** Format: character varying */
    netid?: string;
    /** Format: character varying */
    full_name?: string;
    /** Format: character varying */
    uid?: string;
    /** Format: character varying */
    photo?: string;
    /**
     * Format: character varying
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    email?: string;
    /** Format: character varying */
    school?: string;
    /** Format: character varying */
    address?: string;
    /** Format: integer */
    year?: number;
    /** Format: character varying */
    college?: string;
    /** Format: character varying */
    college_code?: string;
    /** Format: character varying */
    birthday?: string;
    /** Format: character varying */
    major?: string;
    /** Format: character varying */
    phone?: string;
    /** Format: json */
    location?: string;
    /** Format: extensions.geometry */
    location_as_point?: string;
    /** Format: character varying */
    interests?: string;
    /** Format: character varying */
    expression?: string;
    /** Format: character varying */
    university?: string;
    /** Format: boolean */
    summer_in_new_haven?: boolean;
    /** Format: boolean */
    summer_in_new_haven_future?: boolean;
    /** Format: character varying */
    instagram?: string;
    /** Format: character varying */
    linkedin?: string;
  };
}

export interface parameters {
  /** @description Preference */
  preferParams: "params=single-object";
  /** @description Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** @description Preference */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description 2022_facebook */
  "body.2022_facebook": definitions["2022_facebook"];
  /** Format: integer */
  "rowFilter.2022_facebook.id": string;
  /** Format: integer */
  "rowFilter.2022_facebook.upi": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.netid": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.email": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.mailbox": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.first_name": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.last_name": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.school_code": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.school": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.curriculum": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.organization_code": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.organization": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.title": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.address": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.unit_class": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.unit_code": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.unit": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.postal_address": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.office_building": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.cv": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.profile": string;
  /** Format: json */
  "rowFilter.2022_facebook.city": string;
  /** Format: integer */
  "rowFilter.2022_facebook.year": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.college": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.college_code": string;
  /** Format: boolean */
  "rowFilter.2022_facebook.leave": string;
  /** Format: boolean */
  "rowFilter.2022_facebook.eli_whitney": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.image": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.birthday": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.major": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.phone": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.access_code": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.middle_name": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.office_room": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.website": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.education": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.name_recording": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.pronouns": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.phonetic_name": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.suffix": string;
  /** Format: bigint */
  "rowFilter.2022_facebook.fax": string;
  /** Format: extensions.geometry(Point,4326) */
  "rowFilter.2022_facebook.city_as_point": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.birth_day": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.birth_month": string;
  /** Format: boolean */
  "rowFilter.2022_facebook.visitor": string;
  /** Format: character varying */
  "rowFilter.2022_facebook.preferred_name": string;
  /** @description errors */
  "body.errors": definitions["errors"];
  /** Format: character varying */
  "rowFilter.errors.email": string;
  /** Format: json */
  "rowFilter.errors.error": string;
  /** Format: timestamp without time zone */
  "rowFilter.errors.date": string;
  /** @description feedback */
  "body.feedback": definitions["feedback"];
  /** Format: character varying */
  "rowFilter.feedback.email": string;
  /** Format: character varying */
  "rowFilter.feedback.feedback": string;
  /** @description geojson */
  "body.geojson": definitions["geojson"];
  /** Format: text */
  "rowFilter.geojson.request": string;
  /** Format: json */
  "rowFilter.geojson.geojson": string;
  /** @description junction_auth_email_to_user_data */
  "body.junction_auth_email_to_user_data": definitions["junction_auth_email_to_user_data"];
  /**
   * Format: character varying
   * @description Refers to user_data_from_google_auth
   */
  "rowFilter.junction_auth_email_to_user_data.email": string;
  /**
   * Format: uuid
   * @description The corresponding ID Column from user_data
   */
  "rowFilter.junction_auth_email_to_user_data.user_id": string;
  /** @description old_user_data */
  "body.old_user_data": definitions["old_user_data"];
  /** Format: character varying */
  "rowFilter.old_user_data.email": string;
  /** Format: character varying */
  "rowFilter.old_user_data.interests": string;
  /** Format: character varying */
  "rowFilter.old_user_data.expression": string;
  /** Format: json */
  "rowFilter.old_user_data.location": string;
  /** Format: character varying */
  "rowFilter.old_user_data.university": string;
  /** Format: character varying */
  "rowFilter.old_user_data.city_formatted_address": string;
  /** Format: extensions.geometry */
  "rowFilter.old_user_data.location_as_point": string;
  /** Format: character varying */
  "rowFilter.old_user_data.full_name": string;
  /** Format: character varying */
  "rowFilter.old_user_data.photo": string;
  /** Format: boolean */
  "rowFilter.old_user_data.summer_in_new_haven": string;
  /** Format: boolean */
  "rowFilter.old_user_data.summer_in_new_haven_future": string;
  /** Format: character varying */
  "rowFilter.old_user_data.instagram": string;
  /** Format: character varying */
  "rowFilter.old_user_data.linkedin": string;
  /** Format: character varying */
  "rowFilter.old_user_data.phone": string;
  /** Format: character varying */
  "rowFilter.old_user_data.major": string;
  /** Format: integer */
  "rowFilter.old_user_data.year": string;
  /** @description places */
  "body.places": definitions["places"];
  /** Format: character varying */
  "rowFilter.places.place_id": string;
  /** Format: character varying */
  "rowFilter.places.description": string;
  /** Format: timestamp with time zone */
  "rowFilter.places.created_at": string;
  /** Format: extensions.geography */
  "rowFilter.places.geog": string;
  /** Format: double precision */
  "rowFilter.places.lng": string;
  /** Format: double precision */
  "rowFilter.places.lat": string;
  /** @description relationships_between_users */
  "body.relationships_between_users": definitions["relationships_between_users"];
  /** Format: character varying */
  "rowFilter.relationships_between_users.from_email": string;
  /** Format: character varying */
  "rowFilter.relationships_between_users.to_email": string;
  /** @description relationships_between_users_bidirectional */
  "body.relationships_between_users_bidirectional": definitions["relationships_between_users_bidirectional"];
  /** Format: character varying */
  "rowFilter.relationships_between_users_bidirectional.from_email": string;
  /** Format: character varying */
  "rowFilter.relationships_between_users_bidirectional.to_email": string;
  /** Format: character varying */
  "rowFilter.relationships_between_users_bidirectional.returning_from": string;
  /** Format: character varying */
  "rowFilter.relationships_between_users_bidirectional.returning_to": string;
  /** @description relationships_between_users_old */
  "body.relationships_between_users_old": definitions["relationships_between_users_old"];
  /** Format: character varying */
  "rowFilter.relationships_between_users_old.from_email": string;
  /** Format: character varying */
  "rowFilter.relationships_between_users_old.to_email": string;
  /** @description user_data_from_firebase */
  "body.user_data_from_firebase": definitions["user_data_from_firebase"];
  /** Format: character varying */
  "rowFilter.user_data_from_firebase.email": string;
  /** Format: character varying */
  "rowFilter.user_data_from_firebase.uid": string;
  /** Format: character varying */
  "rowFilter.user_data_from_firebase.display_name": string;
  /** Format: boolean */
  "rowFilter.user_data_from_firebase.email_verified": string;
  /** Format: character varying */
  "rowFilter.user_data_from_firebase.photo_url": string;
  /** @description user_responses */
  "body.user_responses": definitions["user_responses"];
  /** Format: character varying */
  "rowFilter.user_responses.interests": string;
  /** Format: character varying */
  "rowFilter.user_responses.expression": string;
  /** Format: character varying */
  "rowFilter.user_responses.university": string;
  /** Format: character varying */
  "rowFilter.user_responses.instagram": string;
  /** Format: character varying */
  "rowFilter.user_responses.linkedin": string;
  /** Format: character varying */
  "rowFilter.user_responses.phone": string;
  /** Format: character varying */
  "rowFilter.user_responses.major": string;
  /** Format: integer */
  "rowFilter.user_responses.year": string;
  /**
   * Format: character varying
   * @description Links to places
   */
  "rowFilter.user_responses.place_id": string;
  /** Format: character varying */
  "rowFilter.user_responses.user_response_id": string;
  /** @description users */
  "body.users": definitions["users"];
  /** Format: character varying */
  "rowFilter.users.email": string;
  /** Format: boolean */
  "rowFilter.users.email_verified": string;
  /** Format: character varying */
  "rowFilter.users.full_name": string;
  /** Format: character varying */
  "rowFilter.users.name": string;
  /** Format: character varying */
  "rowFilter.users.picture": string;
  /** Format: character varying */
  "rowFilter.users.avatar_url": string;
  /** Format: character varying */
  "rowFilter.users.iss": string;
  /** Format: character varying */
  "rowFilter.users.provider_id": string;
  /** Format: character varying */
  "rowFilter.users.sub": string;
  /**
   * Format: uuid
   * @description Unique key from Google Account
   */
  "rowFilter.users.id": string;
  /** Format: character varying */
  "rowFilter.users.user_response_id": string;
  /** @description users3 */
  "body.users3": definitions["users3"];
  /** Format: integer */
  "rowFilter.users3.id": string;
  /** Format: integer */
  "rowFilter.users3.upi": string;
  /** Format: character varying */
  "rowFilter.users3.netid": string;
  /** Format: character varying */
  "rowFilter.users3.email": string;
  /** Format: character varying */
  "rowFilter.users3.mailbox": string;
  /** Format: character varying */
  "rowFilter.users3.first_name": string;
  /** Format: character varying */
  "rowFilter.users3.last_name": string;
  /** Format: character varying */
  "rowFilter.users3.school_code": string;
  /** Format: character varying */
  "rowFilter.users3.school": string;
  /** Format: character varying */
  "rowFilter.users3.curriculum": string;
  /** Format: character varying */
  "rowFilter.users3.organization_code": string;
  /** Format: character varying */
  "rowFilter.users3.organization": string;
  /** Format: character varying */
  "rowFilter.users3.title": string;
  /** Format: character varying */
  "rowFilter.users3.address": string;
  /** Format: character varying */
  "rowFilter.users3.unit_class": string;
  /** Format: character varying */
  "rowFilter.users3.unit_code": string;
  /** Format: character varying */
  "rowFilter.users3.unit": string;
  /** Format: character varying */
  "rowFilter.users3.postal_address": string;
  /** Format: character varying */
  "rowFilter.users3.office_building": string;
  /** Format: character varying */
  "rowFilter.users3.cv": string;
  /** Format: character varying */
  "rowFilter.users3.profile": string;
  /** Format: json */
  "rowFilter.users3.city": string;
  /** Format: integer */
  "rowFilter.users3.year": string;
  /** Format: character varying */
  "rowFilter.users3.college": string;
  /** Format: character varying */
  "rowFilter.users3.college_code": string;
  /** Format: boolean */
  "rowFilter.users3.leave": string;
  /** Format: boolean */
  "rowFilter.users3.eli_whitney": string;
  /** Format: character varying */
  "rowFilter.users3.image": string;
  /** Format: character varying */
  "rowFilter.users3.birthday": string;
  /** Format: character varying */
  "rowFilter.users3.major": string;
  /** Format: character varying */
  "rowFilter.users3.phone": string;
  /** Format: character varying */
  "rowFilter.users3.access_code": string;
  /** Format: character varying */
  "rowFilter.users3.middle_name": string;
  /** Format: character varying */
  "rowFilter.users3.office_room": string;
  /** Format: character varying */
  "rowFilter.users3.website": string;
  /** Format: character varying */
  "rowFilter.users3.education": string;
  /** Format: character varying */
  "rowFilter.users3.name_recording": string;
  /** Format: character varying */
  "rowFilter.users3.pronouns": string;
  /** Format: character varying */
  "rowFilter.users3.phonetic_name": string;
  /** Format: character varying */
  "rowFilter.users3.suffix": string;
  /** Format: bigint */
  "rowFilter.users3.fax": string;
  /** Format: extensions.geometry(Point,4326) */
  "rowFilter.users3.city_as_point": string;
  /** Format: character varying */
  "rowFilter.users3.uid": string;
  /** Format: character varying */
  "rowFilter.users3.display_name": string;
  /** Format: boolean */
  "rowFilter.users3.email_verified": string;
  /** Format: character varying */
  "rowFilter.users3.photo_url": string;
  /** Format: character varying */
  "rowFilter.users3.interests": string;
  /** Format: character varying */
  "rowFilter.users3.expression": string;
  /** Format: json */
  "rowFilter.users3.location": string;
  /** Format: character varying */
  "rowFilter.users3.university": string;
  /** Format: character varying */
  "rowFilter.users3.city_formatted_address": string;
  /** Format: extensions.geometry */
  "rowFilter.users3.location_as_point": string;
  /** Format: character varying */
  "rowFilter.users3.full_name": string;
  /** Format: character varying */
  "rowFilter.users3.photo": string;
  /** Format: boolean */
  "rowFilter.users3.summer_in_new_haven": string;
  /**
   * Format: boolean
   * @description Will be in New Haven before school starts
   */
  "rowFilter.users3.summer_in_new_haven_future": string;
  /** Format: character varying */
  "rowFilter.users3.instagram": string;
  /** Format: character varying */
  "rowFilter.users3.linkedin": string;
  /** @description users_from_yale_facebook_new */
  "body.users_from_yale_facebook_new": definitions["users_from_yale_facebook_new"];
  /** Format: integer */
  "rowFilter.users_from_yale_facebook_new.id": string;
  /** Format: integer */
  "rowFilter.users_from_yale_facebook_new.upi": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.netid": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.email": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.mailbox": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.first_name": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.last_name": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.school_code": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.school": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.curriculum": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.organization_code": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.organization": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.title": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.address": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.unit_class": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.unit_code": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.unit": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.postal_address": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.office_building": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.cv": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.profile": string;
  /** Format: json */
  "rowFilter.users_from_yale_facebook_new.city": string;
  /** Format: integer */
  "rowFilter.users_from_yale_facebook_new.year": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.college": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.college_code": string;
  /** Format: boolean */
  "rowFilter.users_from_yale_facebook_new.leave": string;
  /** Format: boolean */
  "rowFilter.users_from_yale_facebook_new.eli_whitney": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.image": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.birthday": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.major": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.phone": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.access_code": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.middle_name": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.office_room": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.website": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.education": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.name_recording": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.pronouns": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.phonetic_name": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.suffix": string;
  /** Format: bigint */
  "rowFilter.users_from_yale_facebook_new.fax": string;
  /** Format: extensions.geometry(Point,4326) */
  "rowFilter.users_from_yale_facebook_new.city_as_point": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.birth_day": string;
  /** Format: character varying */
  "rowFilter.users_from_yale_facebook_new.birth_month": string;
  /** Format: boolean */
  "rowFilter.users_from_yale_facebook_new.visitor": string;
  /** @description users_times_available */
  "body.users_times_available": definitions["users_times_available"];
  /** Format: character varying */
  "rowFilter.users_times_available.email": string;
  /** Format: timestamp without time zone */
  "rowFilter.users_times_available.start": string;
  /** Format: timestamp without time zone */
  "rowFilter.users_times_available.end": string;
  /**
   * Format: character varying
   * @description Plans for the user while they're in the lobby
   */
  "rowFilter.users_times_available.plans": string;
  /** @description users_times_available_joined_with_users */
  "body.users_times_available_joined_with_users": definitions["users_times_available_joined_with_users"];
  /** Format: timestamp without time zone */
  "rowFilter.users_times_available_joined_with_users.start": string;
  /** Format: timestamp without time zone */
  "rowFilter.users_times_available_joined_with_users.end": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.plans": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.netid": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.full_name": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.uid": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.photo": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.email": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.school": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.address": string;
  /** Format: integer */
  "rowFilter.users_times_available_joined_with_users.year": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.college": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.college_code": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.birthday": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.major": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.phone": string;
  /** Format: json */
  "rowFilter.users_times_available_joined_with_users.location": string;
  /** Format: extensions.geometry */
  "rowFilter.users_times_available_joined_with_users.location_as_point": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.interests": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.expression": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.university": string;
  /** Format: boolean */
  "rowFilter.users_times_available_joined_with_users.summer_in_new_haven": string;
  /** Format: boolean */
  "rowFilter.users_times_available_joined_with_users.summer_in_new_haven_future": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.instagram": string;
  /** Format: character varying */
  "rowFilter.users_times_available_joined_with_users.linkedin": string;
  /** @description users_to_places */
  "body.users_to_places": definitions["users_to_places"];
  /** Format: uuid */
  "rowFilter.users_to_places.id": string;
  /** Format: character varying */
  "rowFilter.users_to_places.name": string;
  /** Format: character varying */
  "rowFilter.users_to_places.avatar_url": string;
  /** Format: character varying */
  "rowFilter.users_to_places.place_id": string;
  /** Format: character varying */
  "rowFilter.users_to_places.description": string;
  /** @description users_view */
  "body.users_view": definitions["users_view"];
  /** Format: character varying */
  "rowFilter.users_view.netid": string;
  /** Format: character varying */
  "rowFilter.users_view.full_name": string;
  /** Format: character varying */
  "rowFilter.users_view.uid": string;
  /** Format: character varying */
  "rowFilter.users_view.photo": string;
  /** Format: character varying */
  "rowFilter.users_view.email": string;
  /** Format: character varying */
  "rowFilter.users_view.school": string;
  /** Format: character varying */
  "rowFilter.users_view.address": string;
  /** Format: integer */
  "rowFilter.users_view.year": string;
  /** Format: character varying */
  "rowFilter.users_view.college": string;
  /** Format: character varying */
  "rowFilter.users_view.college_code": string;
  /** Format: character varying */
  "rowFilter.users_view.birthday": string;
  /** Format: character varying */
  "rowFilter.users_view.major": string;
  /** Format: character varying */
  "rowFilter.users_view.phone": string;
  /** Format: json */
  "rowFilter.users_view.location": string;
  /** Format: extensions.geometry */
  "rowFilter.users_view.location_as_point": string;
  /** Format: character varying */
  "rowFilter.users_view.interests": string;
  /** Format: character varying */
  "rowFilter.users_view.expression": string;
  /** Format: character varying */
  "rowFilter.users_view.university": string;
  /** Format: boolean */
  "rowFilter.users_view.summer_in_new_haven": string;
  /** Format: boolean */
  "rowFilter.users_view.summer_in_new_haven_future": string;
  /** Format: character varying */
  "rowFilter.users_view.instagram": string;
  /** Format: character varying */
  "rowFilter.users_view.linkedin": string;
}

export interface operations {}

export interface external {}
